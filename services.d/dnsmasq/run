#!/usr/bin/with-contenv sh


# Check the config file exists in /config, else copy it in
[ -e "/pxe/ipxe/boot.ipxe" ] || cp -Rf /etc/pxe.preseed/* /pxe/


if [ "$pipework_wait" ]; then
	for _pipework_if in $pipework_wait; do
		echo "weechat: Waiting for pipework to bring up $_pipework_if..."
		pipework --wait -i $_pipework_if
	done
	sleep 1
fi


# Get the ip address of this container
[ "$pxe_nic" ] || pxe_nic="eth0"
_pxe_ip="$(ip -4 -o address show "$pxe_nic" | tr -s ' ' | cut -d' ' -f4 | sed -e 's|/.*||g')"



# Set any optional flags for dnsmasq
[ "$_dnsmasq_flags" ] || _dnsmasq_flags="$@"


# Make sure we have a folder where to store dnsmasq.conf
mkdir -p "/pxe/dnsmasq"

# Append to default dnsmasq.conf
[ -e "/pxe/dnsmasq/dnsmasq.conf" ] || echo "

# permit bind to regular ports < 1024
user=root

# disable dns server
port=0

# enable tftp server
enable-tftp
tftp-root=/pxe

# dhcp proxy mode. do not act as the authoratitive dhcp server
dhcp-range=${_pxe_ip},proxy

# send disable multicast and broadcast discovery, and to download the boot file immediately
dhcp-option=vendor:PXEClient,6,2b

# set tag=IPXE if request comes from 'iPXE' (iPXE user class)
dhcp-userclass=set:IPXE,iPXE

# when dhcp-range mode=proxy, the filename to download. here the .0 is ommited as it gets auto-added
pxe-service=tag:!IPXE,X86PC,      PC-DOS: Chainload Boot - iPXE, ipxe/undionly.kpxe
pxe-service=tag:!IPXE,BC_EFI,     UEFI: Chainload Boot - iPXE,   ipxe/ipxe.efi
pxe-service=tag:!IPXE,X86-64_EFI, UEFI: Chainload Boot - iPXE,   ipxe/ipxe.efi

# if request comes from iPXE, direct it to boot from boot.ipxe
pxe-service=tag:IPXE,X86PC,      PC-DOS: boot.ipxe - iPXE, http://${_pxe_ip}/ipxe/boot.ipxe
pxe-service=tag:IPXE,BC_EFI,     UEFI: boot.ipxe - iPXE,   http://${_pxe_ip}/ipxe/boot.ipxe
pxe-service=tag:IPXE,X86-64_EFI, UEFI: boot.ipxe - iPXE,   http://${_pxe_ip}/ipxe/boot.ipxe


# enable logging
log-queries
log-dhcp

" > /pxe/dnsmasq/dnsmasq.conf


# Make a backup
[ -e "/pxe/dnsmasq/dnsmasq.conf.bak" ] || cp /pxe/dnsmasq/dnsmasq.conf /pxe/dnsmasq/dnsmasq.conf.bak


# If the IP address of this container ever changes, then dnsmasq.conf becomes broken.
# So check for this situation and update the hard-coded IP in dnsmasq.conf accordingly

if ! grep -q "${_pxe_ip}" /pxe/dnsmasq/dnsmasq.conf; then
	_old_pxe_ip="$(grep 'http://.*/ipxe/boot.ipxe' /pxe/dnsmasq/dnsmasq.conf | tail -1 | sed -e 's|.*http://||' -e 's|/.*||')"
	if [ "$_old_pxe_ip" ]; then
		sed -i -e "s/$_old_pxe_ip/$_pxe_ip/" /pxe/dnsmasq/dnsmasq.conf
	fi
fi



# Start dnsmasq
/usr/sbin/dnsmasq --no-daemon --conf-file=/pxe/dnsmasq/dnsmasq.conf $_dnsmasq_flags





# Realtek PCIe GBE Family Controller Series v2.58 (10/08/13)

# CLIENT MAC ADDR: 40 8D 5C 32 46 07 GUID: 40028D03-5C04-3205-4606-070700080009
# CLIENT IP: 192.168.1.35 MASK: 255.255.0.0
# DHCP IP: 192.168.1.1 PROXY IP: ${_pxe_ip}
# GATEWAY IP: 192.168.1.1

# Auto-select:
# 	PC-DOS: Chainload Boot - iPXE

# BOOT SERVER IP:


# TFTP.
# PXE-T01: file /pxe/unionly.kpxe.0 not found
# PXE-E3B: TFTP Error - File Not found
# PXE-M0F: Exiting PXE ROM.










